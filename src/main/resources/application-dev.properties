myprop.name=Dev Env
logging.level.com.rookies3.myspringbootlab=info

# ===== 이름(메트릭 application 라벨) =====
spring.application.name=user

# ===== Kafka =====
app.kafka.topic.user-event=user-events
spring.kafka.bootstrap-servers=${KAFKA_SERVERS}

# Consumer
spring.kafka.consumer.group-id=user-event-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ===== Mail =====
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.default-encoding=UTF-8

# ===== DB =====
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

# ===== JPA =====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# ===== JWT =====
jwt.private-pem-path=classpath:keys/private.pem
jwt.public-pem-path=classpath:keys/public.pem
jwt.access-valid-ms=1800000
jwt.refresh-valid-ms=1296000000
jwt.issuer=festival-user-service

# ===== Signup Ticket =====
signup.ticket.valid-ms=600000


# Kakao OAuth
kakao.restapi-key=${KAKAO_REST_API_KEY}

kakao.admin-key=${KAKAO_ADMIN_KEY}
kakao.redirect-uri=${KAKAO_REDIRECT_URL:http://localhost:10000}/api/auth/kakao/callback
kakao.authorize-uri=https://kauth.kakao.com/oauth/authorize
kakao.token-uri=https://kauth.kakao.com/oauth/token
kakao.userinfo-uri=https://kapi.kakao.com/v2/user/me
kakao.scope=account_email

# Kakao Map
kakao.search-base-url=https://dapi.kakao.com

#10s
user.geocode.initial-delay-ms=10000
#60m
user.geocode.fixed-delay-ms=3600000

#app.frontend.signup-url=/mock/signup.html
#app.frontend.login-url=/mock/login.html

# ===== Frontend URL =====
app.frontend.signup-url=${FRONTEND_URL:http://localhost:5173}/auth/signup/kakao
app.frontend.login-url=${FRONTEND_URL:http://localhost:5173}

# ===== 외부 설정/URL =====
spring.config.import=optional:file:.env[.properties]

# ⚠ 컨테이너에서 localhost 금지 → booking 서비스 DNS 사용
service.reservation.url=http://booking:8082

firebase.key-path=${FIREBASE_KEY_PATH:classpath:firebase/firebase-adminsdk.json}

# API base (게이트웨이 기본값 제공)
base.service.url=${BASE_API:http://localhost:10000}
booking.base.service.url=${BOOKING_BASE_API}
booking.user.list.service.url=${BOOKING_USER_LIST_API}

# ===== Actuator/Prometheus & 메트릭 히스토그램 =====
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metrics.tags.application=${spring.application.name}

# HTTP 서버 지연 히스토그램(p95 계산용)
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Hikari 커넥션 획득 지연 히스토그램(p95)
management.metrics.distribution.percentiles-histogram.hikaricp.connections.acquire=true
management.metrics.distribution.sla.hikaricp.connections.acquire=5ms,10ms,20ms,50ms,100ms,200ms,500ms

# Tomcat 메트릭(MBean) 활성화
server.tomcat.mbeanregistry.enabled=true